{"version":3,"sources":["breakpoints.es.js"],"names":["global","factory","define","amd","exports","mod","breakpointsEs","this","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_typeof","Symbol","iterator","obj","defaults","xs","min","max","sm","md","lg","Infinity","util","each","fn","hasOwnProperty","isFunction","extend","source","property","Callbacks","list","data","one","arguments","undefined","push","splice","caller","callback","window","ChangeEvent","current","callbacks","trigger","size","previous","fire","on","add","off","empty","MediaQuery","name","media","initialize","enter","leave","mql","matchMedia","matches","addListener","removeListener","that","mqlListener","type","types","isMatched","remove","MediaBuilder","_min","_max","between","unit","get","Size","_MediaQuery","_this","getPrototypeOf","changeListener","changeHander","UnionSize","_MediaQuery2","names","sizes","split","Breakpoints$1","join","info","version","unionSizes","Breakpoints","_len","args","Array","_key","apply","defined","values","options","destroy","set","is","breakpoint","all"],"mappings":";;;;;;;CAAA,SAAAA,EAAAC,GACA,GAAA,mBAAAC,QAAAA,OAAAC,IACAD,QAAA,WAAAD,QACA,GAAA,oBAAAG,QACAH,EAAAG,aACA,CACA,IAAAC,GACAD,YAEAH,EAAAI,EAAAD,SACAJ,EAAAM,cAAAD,EAAAD,SAVA,CAYAG,KAAA,SAAAH,GACA,aAMA,SAAAI,EAAAC,EAAAC,GACA,IAAAD,EACA,MAAA,IAAAE,eACA,6DAIA,OAAAD,GAAA,iBAAAA,GAAA,mBAAAA,EAEAD,EADAC,EAIA,SAAAE,EAAAC,EAAAC,GACA,GAAA,mBAAAA,GAAA,OAAAA,EACA,MAAA,IAAAC,UACA,kEACAD,GAIAD,EAAAG,UAAAC,OAAAC,OAAAJ,GAAAA,EAAAE,WACAG,aACAC,MAAAP,EACAQ,YAAA,EACAC,UAAA,EACAC,cAAA,KAGAT,IACAG,OAAAO,eACAP,OAAAO,eAAAX,EAAAC,GACAD,EAAAY,UAAAX,GAGA,SAAAY,EAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,MAAA,IAAAb,UAAA,qCAxCAE,OAAAY,eAAAzB,EAAA,cACAgB,OAAA,IA2CA,IAAAU,EAAA,WACA,SAAAC,EAAAC,EAAAC,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,CACA,IAAAE,EAAAH,EAAAC,GACAE,EAAAf,WAAAe,EAAAf,aAAA,EACAe,EAAAb,cAAA,EACA,UAAAa,IAAAA,EAAAd,UAAA,GACAL,OAAAY,eAAAG,EAAAI,EAAAC,IAAAD,IAIA,OAAA,SAAAR,EAAAU,EAAAC,GAGA,OAFAD,GAAAP,EAAAH,EAAAZ,UAAAsB,GACAC,GAAAR,EAAAH,EAAAW,GACAX,GAdA,GAkBAY,EACA,mBAAAC,QAAA,iBAAAA,OAAAC,SACA,SAAAC,GACA,cAAAA,GAEA,SAAAA,GACA,OAAAA,GACA,mBAAAF,QACAE,EAAAxB,cAAAsB,QACAE,IAAAF,OAAAzB,UACA,gBACA2B,GAUAC,GAEAC,IACAC,IAAA,EACAC,IAAA,KAGAC,IACAF,IAAA,IACAC,IAAA,KAGAE,IACAH,IAAA,IACAC,IAAA,MAGAG,IACAJ,IAAA,KACAC,IAAAI,EAAAA,IAMAC,GACAC,KAAA,SAAAV,EAAAW,GAGA,IAAA,IAAApB,KAAAS,EACA,IAEA,iBADA,IAAAA,EAAA,YAAAH,EAAAG,KAEAA,EAAAY,eAAArB,MAGA,IADAoB,EAAApB,EAAAS,EAAAT,IAEA,OAMAsB,WAAA,SAAAb,GACA,MAAA,mBAAAA,IAAA,GAGAc,OAAA,SAAAd,EAAAe,GACA,IAAA,IAAAC,KAAAD,EACAf,EAAAgB,GAAAD,EAAAC,GAEA,OAAAhB,IAIAiB,EAAA,WACA,SAAAA,IACAlC,EAAAnB,KAAAqD,GAEArD,KAAA4B,OAAA,EACA5B,KAAAsD,QAkFA,OA/EA/B,EAAA8B,IAEAvB,IAAA,MACAjB,MAAA,SAAAkC,EAAAQ,GACA,IAAAC,EACAC,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,IACAA,UAAA,GAGAzD,KAAAsD,KAAAK,MACAZ,GAAAA,EACAQ,KAAAA,EACAC,IAAAA,IAGAxD,KAAA4B,YAIAE,IAAA,SACAjB,MAAA,SAAAkC,GACA,IAAA,IAAApB,EAAA,EAAAA,EAAA3B,KAAAsD,KAAA1B,OAAAD,IACA3B,KAAAsD,KAAA3B,GAAAoB,KAAAA,IACA/C,KAAAsD,KAAAM,OAAAjC,EAAA,GACA3B,KAAA4B,SACAD,QAMAG,IAAA,QACAjB,MAAA,WACAb,KAAAsD,QACAtD,KAAA4B,OAAA,KAIAE,IAAA,OACAjB,MAAA,SAAAgD,EAAAlC,GACA,IAAAoB,EACAU,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GACAA,UAAA,GACA,KAEA9B,IACAA,EAAA3B,KAAA4B,OAAA,GAEA,IAAAkC,EAAA9D,KAAAsD,KAAA3B,GAEAkB,EAAAI,WAAAF,GACAA,EAAA5C,KAAAH,KAAA6D,EAAAC,EAAAnC,GACAkB,EAAAI,WAAAa,EAAAf,KACAe,EAAAf,GAAA5C,KAAA0D,GAAAE,OAAAD,EAAAP,MAGAO,EAAAN,aACAxD,KAAAsD,KAAA3B,GACA3B,KAAA4B,aAKAE,IAAA,OACAjB,MAAA,SAAAgD,GACA,IAAAd,EACAU,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GACAA,UAAA,GACA,KAEA,IAAA,IAAA9B,KAAA3B,KAAAsD,KACAtD,KAAAsD,KAAAN,eAAArB,IACA3B,KAAAG,KAAA0D,EAAAlC,EAAAoB,OAOAM,EAvFA,GA4FAW,GACAC,QAAA,KACAC,UAAA,IAAAb,EACAc,QAAA,SAAAC,GACA,IAAAC,EAAArE,KAAAiE,QACAjE,KAAAiE,QAAAG,EACApE,KAAAkE,UAAAI,KAAAF,EAAA,SAAAP,EAAAC,GACAjB,EAAAI,WAAAa,EAAAf,KACAe,EAAAf,GAAA5C,MAEA8D,QAAAG,EACAC,SAAAA,GAEAP,EAAAP,SAKAC,IAAA,SAAAD,EAAAR,GACA,OAAA/C,KAAAuE,GAAAhB,EAAAR,GAAA,IAEAwB,GAAA,SAAAhB,EAAAR,GACA,IAAAS,EACAC,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,IACAA,UAAA,QAGA,IAAAV,GAAAF,EAAAI,WAAAM,KACAR,EAAAQ,EACAA,OAAAG,GAEAb,EAAAI,WAAAF,IACA/C,KAAAkE,UAAAM,IAAAzB,EAAAQ,EAAAC,IAGAiB,IAAA,SAAA1B,QACA,IAAAA,GACA/C,KAAAkE,UAAAQ,UAKAC,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACA1D,EAAAnB,KAAA2E,GAEA3E,KAAA4E,KAAAA,EACA5E,KAAA6E,MAAAA,EAEA7E,KAAA8E,aA2HA,OAxHAvD,EAAAoD,IAEA7C,IAAA,aACAjB,MAAA,WACAb,KAAAkE,WACAa,MAAA,IAAA1B,EACA2B,MAAA,IAAA3B,GAGArD,KAAAiF,IAAAlB,OAAAmB,YAAAnB,OAAAmB,WAAAlF,KAAA6E,SACAM,SAAA,EACAN,MAAA7E,KAAA6E,MACAO,YAAA,aAGAC,eAAA,cAKA,IAAAC,EAAAtF,KACAA,KAAAuF,YAAA,SAAAN,GACA,IAAAO,EAAAP,EAAAE,SAAA,SAAA,QAEAG,EAAApB,UAAAsB,GAAAlB,KAAAgB,IAEAtF,KAAAiF,IAAAG,YAAApF,KAAAuF,gBAIAzD,IAAA,KACAjB,MAAA,SAAA4E,EAAAlC,EAAAR,GACA,IAAAS,EACAC,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,IACAA,UAAA,GAGA,GAEA,iBADA,IAAAgC,EAAA,YAAAxD,EAAAwD,IAEA,CACA,IAAA,IAAAD,KAAAC,EACAA,EAAAzC,eAAAwC,IACAxF,KAAAuE,GAAAiB,EAAAjC,EAAAkC,EAAAD,GAAAhC,GAGA,OAAAxD,KAQA,YALA,IAAA+C,GAAAF,EAAAI,WAAAM,KACAR,EAAAQ,EACAA,OAAAG,GAGAb,EAAAI,WAAAF,SAIA,IAAA/C,KAAAkE,UAAAuB,KACAzF,KAAAkE,UAAAuB,GAAAjB,IAAAzB,EAAAQ,EAAAC,GAEA,UAAAiC,GAAAzF,KAAA0F,aACA1F,KAAAkE,UAAAuB,GAAAtF,KAAAH,OAIAA,MAXAA,QAeA8B,IAAA,MACAjB,MAAA,SAAA4E,EAAAlC,EAAAR,GACA,OAAA/C,KAAAuE,GAAAkB,EAAAlC,EAAAR,GAAA,MAIAjB,IAAA,MACAjB,MAAA,SAAA4E,EAAA1C,GACA,IAAAyC,OAAA,EAEA,GAEA,iBADA,IAAAC,EAAA,YAAAxD,EAAAwD,IAEA,CACA,IAAAD,KAAAC,EACAA,EAAAzC,eAAAwC,IACAxF,KAAAyE,IAAAe,EAAAC,EAAAD,IAGA,OAAAxF,KAcA,YAXA,IAAAyF,GACAzF,KAAAkE,UAAAa,MAAAL,QACA1E,KAAAkE,UAAAc,MAAAN,SACAe,KAAAzF,KAAAkE,YACAnB,EACA/C,KAAAkE,UAAAuB,GAAAE,OAAA5C,GAEA/C,KAAAkE,UAAAuB,GAAAf,SAIA1E,QAIA8B,IAAA,YACAjB,MAAA,WACA,OAAAb,KAAAiF,IAAAE,WAIArD,IAAA,UACAjB,MAAA,WACAb,KAAAyE,UAKAE,EAlIA,GAuIAiB,GACArD,IAAA,SAAAsD,GAMA,MAAA,eAAAA,GAJApC,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GACAA,UAAA,GACA,MAEA,KAEAjB,IAAA,SAAAsD,GAMA,MAAA,eAAAA,GAJArC,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GACAA,UAAA,GACA,MAEA,KAEAsC,QAAA,SAAAxD,EAAAC,GACA,IAAAwD,EACAvC,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GACAA,UAAA,GACA,KAEA,MACA,eAAAlB,EAAAyD,EAAA,qBAAAxD,EAAAwD,EAAA,KAGAC,IAAA,SAAA1D,EAAAC,GACA,IAAAwD,EACAvC,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GACAA,UAAA,GACA,KAEA,OAAA,IAAAlB,EACAvC,KAAAwC,IAAAA,EAAAwD,GAEAxD,IAAAI,EAAAA,EACA5C,KAAAuC,IAAAA,EAAAyD,GAEAhG,KAAA+F,QAAAxD,EAAAC,EAAAwD,KAIAE,EAAA,SAAAC,GAGA,SAAAD,EAAAtB,GACA,IAAArC,EACAkB,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GAAAA,UAAA,GAAA,EACAjB,EACAiB,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GACAA,UAAA,GACAb,EAAAA,EACAoD,EACAvC,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GACAA,UAAA,GACA,KAEAtC,EAAAnB,KAAAkG,GAEA,IAAArB,EAAAe,EAAAK,IAAA1D,EAAAC,EAAAwD,GAEAI,EAAAnG,EACAD,MACAkG,EAAAhF,WAAAR,OAAA2F,eAAAH,IAAA/F,KAAAH,KAAA4E,EAAAC,IAGAuB,EAAA7D,IAAAA,EACA6D,EAAA5D,IAAAA,EACA4D,EAAAJ,KAAAA,EAEA,IAAAV,EAAAc,EAWA,OAVAA,EAAAE,eAAA,WACAhB,EAAAI,aACA1B,EAAAG,QAAAmB,IAGAc,EAAAV,cACA1B,EAAAC,QAAAmC,GAGAA,EAAAnB,IAAAG,YAAAgB,EAAAE,gBACAF,EAaA,OAnDA/F,EAAA6F,EAoDAvB,GAXApD,EAAA2E,IAEApE,IAAA,UACAjB,MAAA,WACAb,KAAAyE,MACAzE,KAAAiF,IAAAI,eAAArF,KAAAuG,kBAKAL,EApDA,GAuDAM,EAAA,SAAAC,GAGA,SAAAD,EAAAE,GACAvF,EAAAnB,KAAAwG,GAEA,IAAAG,KACA9B,KAUA,OARAhC,EAAAC,KAAA4D,EAAAE,MAAA,KAAA,SAAAjF,EAAAiD,GACA,IAAAR,EAAAyC,EAAAZ,IAAArB,GACAR,IACAuC,EAAAhD,KAAAS,GACAS,EAAAlB,KAAAS,EAAAS,UAIA5E,EACAD,MACAwG,EAAAtF,WAAAR,OAAA2F,eAAAG,IACArG,KAAAH,KAAA0G,EAAA7B,EAAAiC,KAAA,OAIA,OAvBAzG,EAAAmG,EAwBA7B,GADA6B,EAxBA,GA2BAO,GACAC,QAAA,SAKAL,KACAM,KAEAC,EAAAnD,OAAAmD,YAAA,WACA,IACA,IAAAC,EAAA1D,UAAA7B,OAAAwF,EAAAC,MAAAF,GAAAG,EAAA,EACAA,EAAAH,EACAG,IAEAF,EAAAE,GAAA7D,UAAA6D,GAGAJ,EAAAvH,OAAA4H,MAAAL,EAAAE,IAGAF,EAAA7E,SAAAA,QAEA6E,EAAArE,EAAAK,OAAAgE,GACAF,QAAAD,EAAAC,QACAQ,SAAA,EACA7H,OAAA,SAAA8H,GACA,IAAAC,EACAjE,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GAAAA,UAAA,MAEAzD,KAAAwH,SACAxH,KAAA2H,UAGAF,IACAA,EAAAP,EAAA7E,UAGArC,KAAA0H,QAAA7E,EAAAK,OAAAwE,GACA1B,KAAA,OAGA,IAAA,IAAA5B,KAAAqD,EACAA,EAAAzE,eAAAoB,IACApE,KAAA4H,IAAAxD,EAAAqD,EAAArD,GAAA7B,IAAAkF,EAAArD,GAAA5B,IAAAxC,KAAA0H,QAAA1B,MAIAhG,KAAAwH,SAAA,GAEAG,QAAA,WACA9E,EAAAC,KAAA6D,EAAA,SAAA/B,EAAAR,GACAA,EAAAuD,YAEAhB,KACA3C,EAAAC,QAAA,MAEA4D,GAAA,SAAAzD,GACA,IAAA0D,EAAA9H,KAAAiG,IAAA7B,GACA,OAAA0D,EAIAA,EAAApC,YAHA,MAKAqC,IAAA,WACA,IAAArB,KAIA,OAHA7D,EAAAC,KAAA6D,EAAA,SAAA/B,GACA8B,EAAA/C,KAAAiB,KAEA8B,GAGAkB,IAAA,SAAAhD,GACA,IAAArC,EACAkB,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GAAAA,UAAA,GAAA,EACAjB,EACAiB,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GACAA,UAAA,GACAb,EAAAA,EACAoD,EACAvC,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GACAA,UAAA,GACA,KAEAW,EAAApE,KAAAiG,IAAArB,GAMA,OALAR,GACAA,EAAAuD,UAGAhB,EAAA/B,GAAA,IAAAsB,EAAAtB,EAAArC,EAAAC,EAAAwD,GACAW,EAAA/B","file":"breakpoints.min.js","sourcesContent":["/**\n* breakpoints-js v1.0.5\n* https://github.com/amazingSurge/breakpoints-js\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nvar defaults = {\n  // Extra small devices (phones)\n  xs: {\n    min: 0,\n    max: 767\n  },\n  // Small devices (tablets)\n  sm: {\n    min: 768,\n    max: 991\n  },\n  // Medium devices (desktops)\n  md: {\n    min: 992,\n    max: 1199\n  },\n  // Large devices (large desktops)\n  lg: {\n    min: 1200,\n    max: Infinity\n  }\n};\n\n'use strict';\n\nvar util = {\n  each: function(obj, fn) {\n    let continues;\n\n    for (let i in obj) {\n      if (typeof obj !== 'object' || obj.hasOwnProperty(i)) {\n        continues = fn(i, obj[i]);\n        if (continues === false) {\n          break; //allow early exit\n        }\n      }\n    }\n  },\n\n  isFunction: function (obj) {\n    return typeof obj === 'function' || false;\n  },\n\n  extend: function(obj, source) {\n    for (let property in source) {\n        obj[property] = source[property];\n    }\n    return obj;\n  }\n};\n\nclass Callbacks {\n  constructor(){\n    this.length = 0;\n    this.list = [];\n  }\n\n  add(fn, data, one = false) {\n    this.list.push({\n      fn,\n      data: data,\n      one: one\n    });\n\n    this.length++;\n  }\n\n  remove(fn) {\n    for (let i = 0; i < this.list.length; i++) {\n      if (this.list[i].fn === fn) {\n        this.list.splice(i, 1);\n        this.length--;\n        i--;\n      }\n    }\n  }\n\n  empty() {\n    this.list = [];\n    this.length = 0;\n  }\n\n  call(caller, i, fn = null) {\n    if (!i) {\n      i = this.length - 1;\n    }\n    let callback = this.list[i];\n\n    if (util.isFunction(fn)) {\n      fn.call(this, caller, callback, i);\n    } else if (util.isFunction(callback.fn)) {\n      callback.fn.call(caller || window, callback.data);\n    }\n\n    if (callback.one) {\n      delete this.list[i];\n      this.length--;\n    }\n  }\n\n  fire(caller, fn = null) {\n    for (let i in this.list) {\n      if(this.list.hasOwnProperty(i)){\n        this.call(caller, i, fn);\n      }\n    }\n  }\n}\n\n'use strict';\n\nvar ChangeEvent = {\n  current: null,\n  callbacks: new Callbacks(),\n  trigger(size) {\n    let previous = this.current;\n    this.current = size;\n    this.callbacks.fire(size, (caller, callback) => {\n      if (util.isFunction(callback.fn)) {\n        callback.fn.call({\n          current: size,\n          previous\n        }, callback.data);\n      }\n    });\n  },\n  one(data, fn) {\n    return this.on(data, fn, true);\n  },\n  on(data, fn, /*INTERNAL*/ one = false) {\n    if (typeof fn === 'undefined' && util.isFunction(data)) {\n      fn = data;\n      data = undefined;\n    }\n    if (util.isFunction(fn)) {\n      this.callbacks.add(fn, data, one);\n    }\n  },\n  off(fn) {\n    if (typeof fn === 'undefined') {\n      this.callbacks.empty();\n    }\n  }\n};\n\nclass MediaQuery {\n  constructor(name, media) {\n    this.name = name;\n    this.media = media;\n\n    this.initialize();\n  }\n\n  initialize() {\n    this.callbacks = {\n      enter: new Callbacks(),\n      leave: new Callbacks()\n    };\n\n    this.mql = (window.matchMedia && window.matchMedia(this.media)) || {\n      matches: false,\n      media: this.media,\n      addListener: function() {\n        // do nothing\n      },\n      removeListener: function() {\n        // do nothing\n      }\n    };\n\n    const that = this;\n    this.mqlListener = mql => {\n      const type = (mql.matches && 'enter') || 'leave';\n\n      that.callbacks[type].fire(that);\n    };\n    this.mql.addListener(this.mqlListener);\n  }\n\n  on(types, data, fn, one = false) {\n    if (typeof types === 'object') {\n      for (let type in types) {\n        if(types.hasOwnProperty(type)){\n          this.on(type, data, types[type], one);\n        }\n      }\n      return this;\n    }\n\n    if (typeof fn === 'undefined' && util.isFunction(data)) {\n      fn = data;\n      data = undefined;\n    }\n\n    if (!util.isFunction(fn)) {\n      return this;\n    }\n\n    if (typeof this.callbacks[types] !== 'undefined') {\n      this.callbacks[types].add(fn, data, one);\n\n      if (types === 'enter' && this.isMatched()) {\n        this.callbacks[types].call(this);\n      }\n    }\n\n\n    return this;\n  }\n\n  one(types, data, fn) {\n    return this.on(types, data, fn, true);\n  }\n\n  off(types, fn) {\n    let type;\n\n    if (typeof types === 'object') {\n      for (type in types) {\n        if(types.hasOwnProperty(type)){\n          this.off(type, types[type]);\n        }\n      }\n      return this;\n    }\n\n    if (typeof types === 'undefined') {\n      this.callbacks.enter.empty();\n      this.callbacks.leave.empty();\n    } else if (types in this.callbacks) {\n      if (fn) {\n        this.callbacks[types].remove(fn);\n      } else {\n        this.callbacks[types].empty();\n      }\n    }\n\n    return this;\n  }\n\n  isMatched() {\n    return this.mql.matches;\n  }\n\n  destroy() {\n    this.off();\n  }\n}\n\n'use strict';\n\nvar MediaBuilder = {\n  min: function(min, unit = 'px') {\n    return `(min-width: ${min}${unit})`;\n  },\n  max: function(max, unit = 'px') {\n    return `(max-width: ${max}${unit})`;\n  },\n  between: function(min, max, unit = 'px') {\n    return `(min-width: ${min}${unit}) and (max-width: ${max}${unit})`;\n  },\n  get: function(min, max, unit = 'px') {\n    if (min === 0) {\n      return this.max(max, unit);\n    }\n    if (max === Infinity) {\n      return this.min(min, unit);\n    }\n    return this.between(min, max, unit);\n  }\n};\n\nclass Size extends MediaQuery {\n  constructor(name, min = 0, max = Infinity, unit = 'px') {\n    let media = MediaBuilder.get(min, max, unit);\n    super(name, media);\n\n    this.min = min;\n    this.max = max;\n    this.unit = unit;\n\n    const that = this;\n    this.changeListener = () => {\n      if (that.isMatched()) {\n        ChangeEvent.trigger(that);\n      }\n    };\n    if (this.isMatched()) {\n      ChangeEvent.current = this;\n    }\n\n    this.mql.addListener(this.changeListener);\n  }\n\n  destroy() {\n    this.off();\n    this.mql.removeListener(this.changeHander);\n  }\n}\n\nclass UnionSize extends MediaQuery {\n  constructor(names) {\n    let sizes = [];\n    let media = [];\n\n    util.each(names.split(' '), (i, name) => {\n      let size = Breakpoints$1.get(name);\n      if(size){\n        sizes.push(size);\n        media.push(size.media);\n      }\n    });\n\n    super(names, media.join(','));\n  }\n}\n\nvar info = {\n  version:\"1.0.5\"\n};\n\n'use strict';\n\nlet sizes = {};\nlet unionSizes = {};\n\nlet Breakpoints = window.Breakpoints = function(...args) {\n  Breakpoints.define.apply(Breakpoints, args);\n};\n\nBreakpoints.defaults = defaults;\n\nBreakpoints = util.extend(Breakpoints, {\n  version: info.version,\n  defined: false,\n  define(values, options = {}) {\n    if (this.defined) {\n      this.destroy();\n    }\n\n    if (!values) {\n      values = Breakpoints.defaults;\n    }\n\n    this.options = util.extend(options, {\n      unit: 'px'\n    });\n\n    for (let size in values) {\n      if(values.hasOwnProperty(size)){\n        this.set(size, values[size].min, values[size].max, this.options.unit);\n      }\n    }\n\n    this.defined = true;\n  },\n\n  destroy() {\n    util.each(sizes, (name, size) => {\n      size.destroy();\n    });\n    sizes = {};\n    ChangeEvent.current = null;\n  },\n\n  is(size) {\n    const breakpoint = this.get(size);\n    if (!breakpoint) {\n      return null;\n    }\n\n    return breakpoint.isMatched();\n  },\n\n  /* get all size name */\n  all() {\n    let names = [];\n    util.each(sizes, name => {\n      names.push(name);\n    });\n    return names;\n  },\n\n  set: function(name, min = 0, max = Infinity, unit = 'px') {\n    let size = this.get(name);\n    if (size) {\n      size.destroy();\n    }\n\n    sizes[name] = new Size(name, min, max, unit);\n    return sizes[name];\n  },\n\n  get: function(size) {\n    if (sizes.hasOwnProperty(size)) {\n      return sizes[size];\n    }\n\n    return null;\n  },\n\n  getUnion(sizes) {\n    if(unionSizes.hasOwnProperty(sizes)) {\n      return unionSizes[sizes];\n    }\n\n    unionSizes[sizes] = new UnionSize(sizes);\n\n    return unionSizes[sizes];\n  },\n\n  getMin(size) {\n    const obj = this.get(size);\n    if (obj) {\n      return obj.min;\n    }\n    return null;\n  },\n\n  getMax(size) {\n    const obj = this.get(size);\n    if (obj) {\n      return obj.max;\n    }\n    return null;\n  },\n\n  current() {\n    return ChangeEvent.current;\n  },\n\n  getMedia(size) {\n    const obj = this.get(size);\n    if (obj) {\n      return obj.media;\n    }\n    return null;\n  },\n\n  on(sizes, types, data, fn, /*INTERNAL*/ one = false) {\n    sizes = sizes.trim();\n\n    if (sizes === 'change') {\n      fn = data;\n      data = types;\n      return ChangeEvent.on(data, fn, one);\n    }\n    if(sizes.includes(' ')){\n      let union = this.getUnion(sizes);\n\n      if (union) {\n         union.on(types, data, fn, one);\n      }\n    } else {\n      let size = this.get(sizes);\n\n      if (size) {\n        size.on(types, data, fn, one);\n      }\n    }\n\n    return this;\n  },\n\n  one(sizes, types, data, fn) {\n    return this.on(sizes, types, data, fn, true);\n  },\n\n  off(sizes, types, fn) {\n    sizes = sizes.trim();\n\n    if (sizes === 'change') {\n      return ChangeEvent.off(types);\n    }\n\n    if(sizes.includes(' ')){\n      let union = this.getUnion(sizes);\n\n      if (union) {\n        union.off(types, fn);\n      }\n    } else {\n      let size = this.get(sizes);\n\n      if (size) {\n        size.off(types, fn);\n      }\n    }\n\n    return this;\n  }\n});\n\nvar Breakpoints$1 = Breakpoints;\n\nexport default Breakpoints$1;\n"]}